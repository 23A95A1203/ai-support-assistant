{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RAVITEJA\\\\Downloads\\\\ai-support-assistant\\\\frontend\\\\src\\\\components\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport EmailCard from './EmailCard';\nimport Analytics from './Analytics';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  _s();\n  const [emails, setEmails] = useState([]);\n  const [busy, setBusy] = useState(false);\n  const [statusMessage, setStatusMessage] = useState(\"\");\n  const fetchEmails = async () => {\n    try {\n      const res = await fetch(\"http://localhost:8000/emails\");\n      const data = await res.json();\n      setEmails(data);\n    } catch (err) {\n      console.error(err);\n      setStatusMessage(\"Failed to fetch emails.\");\n      setTimeout(() => setStatusMessage(\"\"), 3000);\n    }\n  };\n  const fetchAndProcessEmails = async () => {\n    setBusy(true);\n    setStatusMessage(\"Fetching emails...\");\n    try {\n      await fetch(\"http://localhost:8000/fetch-emails\", {\n        method: \"POST\"\n      });\n      setStatusMessage(\"Processing emails...\");\n      await fetch(\"http://localhost:8000/process-all\");\n      setStatusMessage(\"Emails fetched and processed!\");\n      await fetchEmails(); // refresh list\n    } catch (err) {\n      console.error(err);\n      setStatusMessage(\"Error during fetch/process.\");\n    }\n    setBusy(false);\n    setTimeout(() => setStatusMessage(\"\"), 3000);\n  };\n  const onSaveDraft = async (id, draft) => {\n    setStatusMessage(\"Saving draft...\");\n    try {\n      await fetch(`http://localhost:8000/email/${id}/update-draft`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          draft_reply: draft\n        })\n      });\n      setStatusMessage(\"Draft saved!\");\n      await fetchEmails();\n    } catch (err) {\n      console.error(err);\n      setStatusMessage(\"Error saving draft.\");\n    }\n    setTimeout(() => setStatusMessage(\"\"), 3000);\n  };\n  useEffect(() => {\n    fetchEmails();\n    const interval = setInterval(fetchEmails, 60000); // auto-refresh every 60s\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"AI Support Assistant Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchAndProcessEmails,\n        disabled: busy,\n        children: busy ? \"Working...\" : \"Fetch & Process Emails\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), statusMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '15px',\n        color: '#333'\n      },\n      children: statusMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(Analytics, {\n      emails: emails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"email-list\",\n      children: [emails.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-emails\",\n        children: \"No emails yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 33\n      }, this), emails.map(e => /*#__PURE__*/_jsxDEV(EmailCard, {\n        email: e,\n        onSave: draft => onSaveDraft(e.id, draft)\n      }, e.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"Acdy+xY199X3LlN2H44AB2NKy5M=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","EmailCard","Analytics","jsxDEV","_jsxDEV","Dashboard","_s","emails","setEmails","busy","setBusy","statusMessage","setStatusMessage","fetchEmails","res","fetch","data","json","err","console","error","setTimeout","fetchAndProcessEmails","method","onSaveDraft","id","draft","headers","body","JSON","stringify","draft_reply","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","onClick","disabled","color","length","map","e","email","onSave","_c","$RefreshReg$"],"sources":["C:/Users/RAVITEJA/Downloads/ai-support-assistant/frontend/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport EmailCard from './EmailCard';\nimport Analytics from './Analytics';\n\nexport default function Dashboard() {\n  const [emails, setEmails] = useState([]);\n  const [busy, setBusy] = useState(false);\n  const [statusMessage, setStatusMessage] = useState(\"\");\n\n  const fetchEmails = async () => {\n    try {\n      const res = await fetch(\"http://localhost:8000/emails\");\n      const data = await res.json();\n      setEmails(data);\n    } catch (err) {\n      console.error(err);\n      setStatusMessage(\"Failed to fetch emails.\");\n      setTimeout(() => setStatusMessage(\"\"), 3000);\n    }\n  };\n\n  const fetchAndProcessEmails = async () => {\n    setBusy(true);\n    setStatusMessage(\"Fetching emails...\");\n    try {\n      await fetch(\"http://localhost:8000/fetch-emails\", { method: \"POST\" });\n      setStatusMessage(\"Processing emails...\");\n      await fetch(\"http://localhost:8000/process-all\");\n      setStatusMessage(\"Emails fetched and processed!\");\n      await fetchEmails(); // refresh list\n    } catch (err) {\n      console.error(err);\n      setStatusMessage(\"Error during fetch/process.\");\n    }\n    setBusy(false);\n    setTimeout(() => setStatusMessage(\"\"), 3000);\n  };\n\n  const onSaveDraft = async (id, draft) => {\n    setStatusMessage(\"Saving draft...\");\n    try {\n      await fetch(`http://localhost:8000/email/${id}/update-draft`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ draft_reply: draft }),\n      });\n      setStatusMessage(\"Draft saved!\");\n      await fetchEmails();\n    } catch (err) {\n      console.error(err);\n      setStatusMessage(\"Error saving draft.\");\n    }\n    setTimeout(() => setStatusMessage(\"\"), 3000);\n  };\n\n  useEffect(() => {\n    fetchEmails();\n    const interval = setInterval(fetchEmails, 60000); // auto-refresh every 60s\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div className=\"dashboard\">\n      <h1>AI Support Assistant Dashboard</h1>\n\n      <div style={{ marginBottom: '20px' }}>\n        <button onClick={fetchAndProcessEmails} disabled={busy}>\n          {busy ? \"Working...\" : \"Fetch & Process Emails\"}\n        </button>\n      </div>\n\n      {statusMessage && <div style={{ marginBottom: '15px', color: '#333' }}>{statusMessage}</div>}\n\n      <Analytics emails={emails} />\n\n      <div className=\"email-list\">\n        {emails.length === 0 && <div className=\"no-emails\">No emails yet.</div>}\n        {emails.map(e => (\n          <EmailCard key={e.id} email={e} onSave={draft => onSaveDraft(e.id, draft)} />\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}